# LibreChat Environment Configuration for OCI Load Balancer Setup

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Application URL (this should match your domain)
APP_TITLE=LibreChat
CUSTOM_FOOTER=

# Server configuration
PORT=3080
HOST=0.0.0.0

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB connection string - use the service name from docker-compose
MONGO_URI=mongodb://mongo:27017/librechat

# =============================================================================
# SESSION AND SECURITY
# =============================================================================

# Generate a secure random string for session encryption
# You can generate one using: openssl rand -base64 32
JWT_SECRET=your-super-secure-jwt-secret-here
JWT_REFRESH_SECRET=your-super-secure-refresh-secret-here

# Session secret for express-session
SESSION_EXPIRY=1000 * 60 * 15
REFRESH_TOKEN_EXPIRY=1000 * 60 * 60 * 24 * 7

# =============================================================================
# ADMIN CONFIGURATION
# =============================================================================

# 관리자 초기 계정
ADMIN_EMAIL=admin@leecod.ing
ADMIN_PASSWORD=secure_admin_password

# =============================================================================
# OPENAI CONFIGURATION
# =============================================================================

# OpenAI API Configuration
OPENAI_API_KEY=your-openai-api-key-here
# OPENAI_ORGANIZATION=your-openai-org-id-here

# =============================================================================
# RAG API CONFIGURATION (for the rag_api service)
# =============================================================================

# OpenAI API key for RAG functionality
RAG_OPENAI_API_KEY=your-openai-api-key-here

# Embeddings configuration
EMBEDDINGS_PROVIDER=openai
EMBEDDINGS_MODEL=text-embedding-ada-002

# =============================================================================
# GOOGLE OAUTH CONFIGURATION (for social login)
# =============================================================================

# Google OAuth credentials - get these from Google Cloud Console
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALLBACK_URL=https://leecod.ing/oauth/google/callback

# =============================================================================
# LOAD BALANCER AND PROXY SETTINGS
# =============================================================================

# Since we're using OCI Load Balancer, we need to trust the proxy
# This ensures that the application correctly identifies the original client IP
TRUST_PROXY=true

# The domain where your application will be accessible
DOMAIN_SERVER=https://leecod.ing
DOMAIN_CLIENT=https://leecod.ing

# =============================================================================
# LOGGING AND DEBUGGING
# =============================================================================

# Debug mode - set to false in production
DEBUG_LOGGING=false
DEBUG_CONSOLE=false

# Log level: error, warn, info, http, verbose, debug, silly
LOG_LEVEL=info

# =============================================================================
# RATE LIMITING
# =============================================================================

# Rate limiting configuration
LIMIT_CONCURRENT_MESSAGES=1
LIMIT_MESSAGE_IP=40
LIMIT_MESSAGE_USER=40

# =============================================================================
# SECURITY HEADERS
# =============================================================================

# Content Security Policy - adjust as needed for your domain
CSP_ENABLED=true
